name: SEMTLE-WEB-SERVER CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      # GitHub 레포지토리 체크아웃
      - uses: actions/checkout@v4

      # Java 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Gradle 캐싱
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Gradle 권한 설정
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew build

      # Docker 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/semtle-web-server:latest -f Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/semtle-web-server:latest

  deploy-docker-image:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build-docker-image
    runs-on: ubuntu-latest

    steps:
      # Docker 로그인
      - name: Login to Docker Hub
        run: |
          sudo docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }}

      # 기존 컨테이너 확인 및 중지
      - name: Check and Stop Running Container
        run: |
          if sudo docker ps -a | grep -q spring_container; then
            sudo docker stop spring_container
            sudo docker rm springr_container
          fi

      # 최신 Docker 이미지 가져오기
      - name: Pull Docker Image
        run: sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/semtle-web-server:latest

      # 새로운 컨테이너 실행
      - name: Run Docker Container
        run: sudo docker run -d --name spring_container -p 8090:8090 ${{ secrets.DOCKERHUB_USERNAME }}/semtle-web-server:latest

      # 불필요한 Docker 이미지 삭제
      - name: Clean Up Old Docker Images
        run: sudo docker system prune -f
